import numpy as np
import matplotlib.pylab as plt
from mpl_toolkits import mplot3d

X = np.linspace(0, 1, 101)
Y = np.linspace(0, 1, 101)
X, Y = np.meshgrid(X, Y)

front1TempProm = np.genfromtxt("TemperaturaPromedioFronteraLibre.dat")
front2TempProm = np.genfromtxt("TemperaturaPromedioFronteraPeriodica.dat")
front3TempProm = np.genfromtxt("TemperaturaPromedioFronteraFija.dat")
fuenteFront1TempProm = np.genfromtxt("TemperaturaPromedioFronteraLibreFuente.dat")
fuenteFront2TempProm = np.genfromtxt("TemperaturaPromedioFronteraPeriodicaFuente.dat")
fuenteFront3TempProm = np.genfromtxt("TemperaturaPromedioFronteraFijaFuente.dat")


frontera1Tiempo1 = np.genfromtxt("datosFrontera1.dat", skip_footer = 202)
frontera1Tiempo2 = np.genfromtxt("datosFrontera1.dat", skip_header = 101, skip_footer = 101)
frontera1Tiempo3 = np.genfromtxt("datosFrontera1.dat", skip_header = 202)

##Frontera 1, fronteras libres

fig = plt.figure()
ax = fig.gca(projection='3d')
surf = ax.plot_surface(X, Y, frontera1Tiempo1, cmap="plasma", linewidth=0, antialiased=False)
ax.set_xlabel("Eje x en metros")
ax.set_ylabel("Eje y en metros")
ax.set_zlabel("Temperatura en celcius")
ax.set_title("Solucion Ec difusion frontera libre en t=0seg")
plt.savefig("frontera1Tiempo1.png")

fig = plt.figure()
ax = fig.gca(projection='3d')
surf = ax.plot_surface(X, Y, frontera1Tiempo2, cmap="plasma", linewidth=0, antialiased=False)
ax.set_xlabel("Eje x en metros")
ax.set_ylabel("Eje y en metros")
ax.set_zlabel("Temperatura en celcius")
ax.set_title("Solucion Ec difusion frontera libre en t=1000seg")
plt.savefig("frontera1Tiempo2.png")

fig = plt.figure()
ax = fig.gca(projection='3d')
surf = ax.plot_surface(X, Y, frontera1Tiempo3, cmap="plasma", linewidth=0, antialiased=False)
ax.set_xlabel("Eje x en metros")
ax.set_ylabel("Eje y en metros")
ax.set_zlabel("Temperatura en celcius")
ax.set_title("Solucion Ec difusion frontera libre en t=2500seg")
plt.savefig("frontera1Tiempo3.png")

plt.figure()
plt.plot(front1TempProm[:,0], front1TempProm[:,1], color="green")
plt.title("Temperatura promedio vs tiempo con frontera libre")
plt.xlabel("Tiempo en segundo")
plt.ylabel("Temperatura promedio en celcius")
plt.savefig("TemperaturaPromFronteraLibre.png")

##Frontera 2, fronteras periodicas

frontera2Tiempo1 = np.genfromtxt("datosFrontera2.dat", skip_footer = 202)
frontera2Tiempo2 = np.genfromtxt("datosFrontera2.dat", skip_header = 101, skip_footer = 101)
frontera2Tiempo3 = np.genfromtxt("datosFrontera2.dat", skip_header = 202)

fig = plt.figure()
ax = fig.gca(projection='3d')
surf = ax.plot_surface(X, Y, frontera2Tiempo1, cmap="plasma", linewidth=0, antialiased=False)
ax.set_xlabel("Eje x en metros")
ax.set_ylabel("Eje y en metros")
ax.set_zlabel("Temperatura en celcius")
ax.set_title("Solucion Ec difusion frontera periodica en t=0seg")
plt.savefig("frontera2Tiempo1.png")

fig = plt.figure()
ax = fig.gca(projection='3d')
surf = ax.plot_surface(X, Y, frontera2Tiempo2, cmap="plasma", linewidth=0, antialiased=False)
ax.set_xlabel("Eje x en metros")
ax.set_ylabel("Eje y en metros")
ax.set_zlabel("Temperatura en celcius")
ax.set_title("Solucion Ec difusion frontera periodica en t=100seg")
plt.savefig("frontera2Tiempo2.png")

fig = plt.figure()
ax = fig.gca(projection='3d')
surf = ax.plot_surface(X, Y, frontera2Tiempo3, cmap="plasma", linewidth=0, antialiased=False)
ax.set_xlabel("Eje x en metros")
ax.set_ylabel("Eje y en metros")
ax.set_zlabel("Temperatura en celcius")
ax.set_title("Solucion Ec difusion frontera periodica en t=2500seg")
plt.savefig("frontera2Tiempo3.png")

plt.figure()
plt.plot(front2TempProm[:,0], front2TempProm[:,1], color="green")
plt.title("Temperatura promedio vs tiempo con frontera periodicas")
plt.xlabel("Tiempo en segundo")
plt.ylabel("Temperatura promedio en celcius")
plt.savefig("TemperaturaPromFronteraPeriodica.png")

##Frontera 3, fronteras fijas

frontera3Tiempo1 = np.genfromtxt("datosFrontera3.dat", skip_footer = 202)
frontera3Tiempo2 = np.genfromtxt("datosFrontera3.dat", skip_header = 101, skip_footer = 101)
frontera3Tiempo3 = np.genfromtxt("datosFrontera3.dat", skip_header = 202)

fig = plt.figure()
ax = fig.gca(projection='3d')
surf = ax.plot_surface(X, Y, frontera3Tiempo1, cmap="plasma", linewidth=0, antialiased=False)
ax.set_xlabel("Eje x en metros")
ax.set_ylabel("Eje y en metros")
ax.set_zlabel("Temperatura en celcius")
ax.set_title("Solucion Ec difusion frontera fija en t=0seg")
plt.savefig("frontera3Tiempo1.png")

fig = plt.figure()
ax = fig.gca(projection='3d')
surf = ax.plot_surface(X, Y, frontera3Tiempo2, cmap="plasma", linewidth=0, antialiased=False)
ax.set_xlabel("Eje x en metros")
ax.set_ylabel("Eje y en metros")
ax.set_zlabel("Temperatura en celcius")
ax.set_title("Solucion Ec difusion frontera fija en t=100seg")
plt.savefig("frontera3Tiempo2.png")

fig = plt.figure()
ax = fig.gca(projection='3d')
surf = ax.plot_surface(X, Y, frontera3Tiempo3, cmap="plasma", linewidth=0, antialiased=False)
ax.set_xlabel("Eje x en metros")
ax.set_ylabel("Eje y en metros")
ax.set_zlabel("Temperatura en celcius")
ax.set_title("Solucion Ec difusion frontera fija en t=2500seg")
plt.savefig("frontera3Tiempo3.png")

plt.figure()
plt.plot(front3TempProm[:,0], front3TempProm[:,1], color="green")
plt.title("Temperatura promedio vs tiempo con frontera fijas")
plt.xlabel("Tiempo en segundo")
plt.ylabel("Temperatura promedio en celcius")
plt.savefig("TemperaturaPromFronteraFija.png")

##Frontera 1 Fuente, fronteras libres con fuente

fuenteFrontera1Tiempo1 = np.genfromtxt("datosFrontera1Fuente.dat", skip_footer = 202)
fuenteFrontera1Tiempo2 = np.genfromtxt("datosFrontera1Fuente.dat", skip_header = 101, skip_footer = 101)
fuenteFrontera1Tiempo3 = np.genfromtxt("datosFrontera1Fuente.dat", skip_header = 202)

fig = plt.figure()
ax = fig.gca(projection='3d')
surf = ax.plot_surface(X, Y, fuenteFrontera1Tiempo1, cmap="plasma", linewidth=0, antialiased=False)
ax.set_xlabel("Eje x en metros")
ax.set_ylabel("Eje y en metros")
ax.set_zlabel("Temperatura en celcius")
ax.set_title("Solucion Ec difusion frontera libre en t=0seg")
plt.savefig("fuenteFrontera1Tiempo1.png")

fig = plt.figure()
ax = fig.gca(projection='3d')
surf = ax.plot_surface(X, Y, fuenteFrontera1Tiempo2, cmap="plasma", linewidth=0, antialiased=False)
ax.set_xlabel("Eje x en metros")
ax.set_ylabel("Eje y en metros")
ax.set_zlabel("Temperatura en celcius")
ax.set_title("Solucion Ec difusion frontera libre en t=100seg")
plt.savefig("fuenteFrontera1Tiempo2.png")

fig = plt.figure()
ax = fig.gca(projection='3d')
surf = ax.plot_surface(X, Y, fuenteFrontera1Tiempo3, cmap="plasma", linewidth=0, antialiased=False)
ax.set_xlabel("Eje x en metros")
ax.set_ylabel("Eje y en metros")
ax.set_zlabel("Temperatura en celcius")
ax.set_title("Solucion Ec difusion frontera libre en t=2500seg")
plt.savefig("fuenteFrontera1Tiempo3.png")

plt.figure()
plt.plot(fuenteFront1TempProm[:,0], fuenteFront1TempProm[:,1], color="green")
plt.title("Temperatura promedio vs tiempo con frontera libre")
plt.xlabel("Tiempo en segundo")
plt.ylabel("Temperatura promedio en celcius")
plt.savefig("TemperaturaPromFronteraLibre.png")

##Frontera 2 Fuente, fronteras periodicas con fuente

fuenteFrontera2Tiempo1 = np.genfromtxt("datosFrontera2Fuente.dat", skip_footer = 202)
fuenteFrontera2Tiempo2 = np.genfromtxt("datosFrontera2Fuente.dat", skip_header = 101, skip_footer = 101)
fuenteFrontera2Tiempo3 = np.genfromtxt("datosFrontera2Fuente.dat", skip_header = 202)

fig = plt.figure()
ax = fig.gca(projection='3d')
surf = ax.plot_surface(X, Y, fuenteFrontera2Tiempo1, cmap="plasma", linewidth=0, antialiased=False)
ax.set_xlabel("Eje x en metros")
ax.set_ylabel("Eje y en metros")
ax.set_zlabel("Temperatura en celcius")
ax.set_title("Solucion Ec difusion frontera periodica en t=0seg")
plt.savefig("fuenteFrontera2Tiempo1.png")

fig = plt.figure()
ax = fig.gca(projection='3d')
surf = ax.plot_surface(X, Y, fuenteFrontera2Tiempo2, cmap="plasma", linewidth=0, antialiased=False)
ax.set_xlabel("Eje x en metros")
ax.set_ylabel("Eje y en metros")
ax.set_zlabel("Temperatura en celcius")
ax.set_title("Solucion Ec difusion frontera periodica en t=100seg")
plt.savefig("fuenteFrontera2Tiempo2.png")

fig = plt.figure()
ax = fig.gca(projection='3d')
surf = ax.plot_surface(X, Y, fuenteFrontera2Tiempo3, cmap="plasma", linewidth=0, antialiased=False)
ax.set_xlabel("Eje x en metros")
ax.set_ylabel("Eje y en metros")
ax.set_zlabel("Temperatura en celcius")
ax.set_title("Solucion Ec difusion frontera periodica en t=2500seg")
plt.savefig("fuenteFrontera2Tiempo3.png")

plt.figure()
plt.plot(fuenteFront2TempProm[:,0], fuenteFront2TempProm[:,1], color="green")
plt.title("Temperatura promedio vs tiempo con frontera periodica")
plt.xlabel("Tiempo en segundo")
plt.ylabel("Temperatura promedio en celcius")
plt.savefig("TemperaturaPromFronteraPeriodica.png")

##Frontera 3 Fuente, fronteras fijas con fuente

fuenteFrontera3Tiempo1 = np.genfromtxt("datosFrontera3Fuente.dat", skip_footer = 202)
fuenteFrontera3Tiempo2 = np.genfromtxt("datosFrontera3Fuente.dat", skip_header = 101, skip_footer = 101)
fuenteFrontera3Tiempo3 = np.genfromtxt("datosFrontera3Fuente.dat", skip_header = 202)

fig = plt.figure()
ax = fig.gca(projection='3d')
surf = ax.plot_surface(X, Y, fuenteFrontera3Tiempo1, cmap="plasma", linewidth=0, antialiased=False)
ax.set_xlabel("Eje x en metros")
ax.set_ylabel("Eje y en metros")
ax.set_zlabel("Temperatura en celcius")
ax.set_title("Solucion Ec difusion frontera fija en t=0seg")
plt.savefig("fuenteFrontera3Tiempo1.png")

fig = plt.figure()
ax = fig.gca(projection='3d')
surf = ax.plot_surface(X, Y, fuenteFrontera3Tiempo2, cmap="plasma", linewidth=0, antialiased=False)
ax.set_xlabel("Eje x en metros")
ax.set_ylabel("Eje y en metros")
ax.set_zlabel("Temperatura en celcius")
ax.set_title("Solucion Ec difusion frontera fija en t=100seg")
plt.savefig("fuenteFrontera3Tiempo2.png")

fig = plt.figure()
ax = fig.gca(projection='3d')
surf = ax.plot_surface(X, Y, fuenteFrontera3Tiempo3, cmap="plasma", linewidth=0, antialiased=False)
ax.set_xlabel("Eje x en metros")
ax.set_ylabel("Eje y en metros")
ax.set_zlabel("Temperatura en celcius")
ax.set_title("Solucion Ec difusion frontera fija en t=2500seg")
plt.savefig("fuenteFrontera3Tiempo3.png")

plt.figure()
plt.plot(fuenteFront3TempProm[:,0], fuenteFront3TempProm[:,1], color="green")
plt.title("Temperatura promedio vs tiempo con frontera fija")
plt.xlabel("Tiempo en segundo")
plt.ylabel("Temperatura promedio en celcius")
plt.savefig("TemperaturaPromFronteraFija.png")
